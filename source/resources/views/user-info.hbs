<link rel="stylesheet" href="/css/app.css">

<div class="container mt-5 mb-5 user-info-page">
  <div class="row">
    <div class="col-md-10 col-lg-8 mx-auto">
      <div class="card shadow user-profile-card">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
          <h3 class="m-0">Thông tin tài khoản</h3>
          <a href="/admin/dashboard" class="btn btn-light btn-sm">
            <i class="fa-solid fa-arrow-left"></i> Quay lại
          </a>
        </div>
        
        <div class="card-body">
          <div class="text-center mb-4">
            <div class="avatar-container mb-3">
              {{#if profileUser.avatar}}
                <img src="{{profileUser.avatar}}" alt="Avatar" class="img-thumbnail rounded-circle">
              {{else}}
                <div class="no-avatar">
                  <i class="fa-solid fa-user"></i>
                </div>
              {{/if}}
            </div>
            
            <h3 class="mb-0 username-display">{{profileUser.username}}</h3>
            <p class="text-muted mt-2">
              {{#ifEquals profileUser.role "admin"}}
                <span class="badge bg-danger text-white">Admin</span>
              {{else ifEquals profileUser.role "moderator"}}
                <span class="badge bg-warning text-white">Moderator</span>
              {{else}}
                <span class="badge bg-primary text-white">Thành viên</span>
              {{/ifEquals}}
              
              {{#if profileUser.isLocked}}
                <span class="badge bg-danger ms-2 text-white">Đã khoá</span>
              {{else}}
                <span class="badge bg-success ms-2 text-white">Đang hoạt động</span>
              {{/if}}
            </p>
          </div>
          
          <div class="user-info-section">
            <div class="row">
              <div class="col-md-6">
                <table class="table">
                  <tbody>
                    <tr>
                      <th>Tên người dùng:</th>
                      <td>{{profileUser.username}}</td>
                    </tr>
                    <tr>
                      <th>Email:</th>
                      <td>{{profileUser.email}}</td>
                    </tr>
                    {{#if profileUser.age}}
                    <tr>
                      <th>Tuổi:</th>
                      <td>{{profileUser.age}}</td>
                    </tr>
                    {{/if}}
                  </tbody>
                </table>
              </div>
              
              <div class="col-md-6">
                <table class="table">
                  <tbody>
                    {{#if profileUser.address}}
                    <tr>
                      <th>Địa chỉ:</th>
                      <td>{{profileUser.address}}</td>
                    </tr>
                    {{/if}}
                    
                    {{#if profileUser.gender}}
                    <tr>
                      <th>Giới tính:</th>
                      <td>
                        {{#ifEquals profileUser.gender "Nam"}}Nam{{/ifEquals}}
                        {{#ifEquals profileUser.gender "Nữ"}}Nữ{{/ifEquals}}
                        {{#ifEquals profileUser.gender "Khác"}}Khác{{/ifEquals}}
                      </td>
                    </tr>
                    {{/if}}
                    <tr>
                      <th>Ngày tạo:</th>
                      <td>{{formatDate profileUser.createdAt}}</td>
                    </tr>
                    <tr>
                      <th>Lần cập nhật cuối:</th>
                      <td>{{formatDate profileUser.updatedAt}}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
          
          <div class="user-stats mt-4">
            <h4>Thống kê hoạt động</h4>
            <div class="row">
              <div class="col-md-4 mb-3" id="post-count-card" style="cursor: pointer;">
                <div class="card stats-card">
                  <div class="card-body text-center">
                    <h5 class="card-title">Số bài viết</h5>
                    <p class="card-text">{{profileUser.postCount}}</p>
                  </div>
                </div>
              </div>
              <div class="col-md-4 mb-3">
                <div class="card stats-card">
                  <div class="card-body text-center">
                    <h5 class="card-title">Bình luận</h5>
                    <p class="card-text">{{profileUser.commentCount}}</p>
                  </div>
                </div>
              </div>
              <div class="col-md-4 mb-3">
                <div class="card stats-card">
                  <div class="card-body text-center">
                    <h5 class="card-title">Lượt thích</h5>
                    <p class="card-text">{{profileUser.likeCount}}</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div id="recent-posts-section" class="recent-posts mt-5" style="margin-left: 15px; margin-right: 15px; margin-bottom: 15px; display: none;">
            <h4>Bài viết gần đây</h4>
            <div class="list-group">
              {{#each recentPosts}}
                <a href="/dishes/{{this.slug}}" class="list-group-item list-group-item-action">
                  <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">{{this.name}}</h5>
                    <small>{{formatDate this.createdAt}}</small>
                  </div>
                  {{!-- <p class="mb-1">{{shorten this.description 100}}</p> --}}
                </a>
              {{else}}
                <div class="list-group-item text-center text-muted">
                  Bạn chưa có bài viết nào
                </div>
              {{/each}}
            </div>
        </div>
        
        <div class="card-footer">
          <div class="d-flex justify-content-between">
            <form action="/admin/user/lock/{{profileUser._id}}" method="POST" class="d-inline lock-form">
              <button type="button" class="btn {{#if profileUser.isLocked}}btn-success btn-unlock{{else}}btn-warning btn-lock{{/if}}"
              data-username="{{profileUser.username}}">
                {{#if profileUser.isLocked}}
                  <i class="fa-solid fa-unlock"></i> Mở khoá tài khoản
                {{else}}
                  <i class="fa-solid fa-lock"></i> Khoá tài khoản
                {{/if}}
              </button>
            </form>
            
            <form action="/admin/user/role/{{profileUser._id}}" method="POST" class="d-inline role-form">
              <button type="button" class="btn {{#ifEquals profileUser.role "admin"}}btn-primary{{else}}btn-info{{/ifEquals}} btn-role-toggle"
              data-username="{{profileUser.username}}" data-role="{{profileUser.role}}" {{#ifEquals profileUser.role "admin"}} disabled {{/ifEquals}}>
                <i class="fa-solid fa-user-tag"></i> 
                {{#ifEquals profileUser.role "admin"}}
                  Không thể thay đổi
                {{else ifEquals profileUser.role "moderator"}}
                  Đổi thành Thành viên
                {{else}}
                  Đổi thành Moderator
                {{/ifEquals}}
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Xử lý nút khoá/mở khoá
    const lockBtn = document.querySelector('.btn-lock, .btn-unlock');
    if (lockBtn) {
      lockBtn.addEventListener('click', function(e) {
        e.preventDefault();
        const form = this.closest('form');
        const username = this.getAttribute('data-username');
        const isUnlock = this.classList.contains('btn-unlock');
        
        Swal.fire({
          title: isUnlock ? 'Mở khoá tài khoản?' : 'Khoá tài khoản?',
          text: isUnlock 
            ? `Bạn có muốn mở khoá tài khoản của ${username}?`
            : `Bạn có muốn khoá tài khoản của ${username}?`,
          icon: 'question',
          showCancelButton: true,
          confirmButtonColor: isUnlock ? '#28a745' : '#f39c12',
          cancelButtonColor: '#3085d6',
          confirmButtonText: isUnlock ? 'Mở khoá' : 'Khoá',
          cancelButtonText: 'Huỷ'
        }).then((result) => {
          if (result.isConfirmed) {
            form.submit();
          }
        });
      });
    }
    
    // Xử lý nút đổi vai trò

		const roleBtn = document.querySelector('.btn-role-toggle');
		if (roleBtn) {
			roleBtn.addEventListener('click', function(e) {
				e.preventDefault();
				const form = this.closest('form');
				const username = this.getAttribute('data-username');
				const currentRole = this.getAttribute('data-role');
				
				// Chỉ xử lý nếu không phải admin
				if (currentRole === 'admin') {
					Swal.fire({
						title: 'Không thể thay đổi',
						text: 'Không thể thay đổi vai trò của Admin',
						icon: 'info',
						confirmButtonText: 'OK'
					});
					return;
				}
				
				// Xác định vai trò mới
				const newRole = currentRole === 'user' ? 'Moderator' : 'Thành viên';
				
				Swal.fire({
					title: 'Thay đổi vai trò?',
					text: `Bạn có muốn đổi vai trò của "${username}" thành ${newRole}?`,
					icon: 'question',
					showCancelButton: true,
					confirmButtonColor: '#007bff',
					cancelButtonColor: '#6c757d',
					confirmButtonText: 'Đổi vai trò',
					cancelButtonText: 'Huỷ'
				}).then((result) => {
					if (result.isConfirmed) {
						fetch(form.action, {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'X-Requested-With': 'XMLHttpRequest'
							},
							credentials: 'same-origin'
						})
						.then(response => response.json())
						.then(data => {
							if (data.success) {
								Swal.fire({
									title: 'Thành công!',
									text: data.message,
									icon: 'success',
									confirmButtonText: 'OK'
								}).then(() => {
									// Cập nhật UI
									roleBtn.setAttribute('data-role', data.user.role);
									
									if (data.user.role === 'moderator') {
										roleBtn.innerHTML = '<i class="fa-solid fa-user-tag"></i> Đổi thành Thành viên';
										roleBtn.className = 'btn btn-primary btn-role-toggle';
										
										// Cập nhật badge nếu có
										const roleBadge = document.querySelector('.badge');
										if (roleBadge) {
											roleBadge.className = 'badge bg-warning';
											roleBadge.textContent = 'Moderator';
										}
										
										// Cập nhật text role nếu có
										const roleDisplay = document.querySelector('.role-display');
										if (roleDisplay) roleDisplay.textContent = 'Điều hành viên';
									} else {
										roleBtn.innerHTML = '<i class="fa-solid fa-user-tag"></i> Đổi thành Moderator';
										roleBtn.className = 'btn btn-info btn-role-toggle';
										
										// Cập nhật badge nếu có
										const roleBadge = document.querySelector('.badge');
										if (roleBadge) {
											roleBadge.className = 'badge bg-primary';
											roleBadge.textContent = 'Thành viên';
										}
										
										// Cập nhật text role nếu có
										const roleDisplay = document.querySelector('.role-display');
										if (roleDisplay) roleDisplay.textContent = 'Thành viên';
									}
								});
							} else {
								Swal.fire({
									title: 'Lỗi!',
									text: data.message,
									icon: 'error',
									confirmButtonText: 'OK'
								});
							}
						})
						.catch(error => {
							console.error('Error:', error);
							Swal.fire({
								title: 'Lỗi!',
								text: 'Đã xảy ra lỗi khi kết nối với máy chủ',
								icon: 'error',
								confirmButtonText: 'OK'
							});
						});
					}
				});
			});
		}

    const postCountCard = document.getElementById('post-count-card');
    const recentPostsSection = document.querySelector('.recent-posts'); // Use class as fallback
    
    if (postCountCard && recentPostsSection) {
      postCountCard.addEventListener('click', function() {
        console.log('Post count card clicked'); // Debug message
        
        // Toggle visibility with visual feedback
        if (window.getComputedStyle(recentPostsSection).display === 'none') {
          recentPostsSection.style.display = 'block';
          postCountCard.querySelector('.card').classList.add('border-primary');
          recentPostsSection.scrollIntoView({ behavior: 'smooth' });
        } else {
          recentPostsSection.style.display = 'none';
          postCountCard.querySelector('.card').classList.remove('border-primary');
        }
      });
    }
  });
</script>